{"version":3,"file":"ipsub.min.js","sources":["../src/types/logger.ts","../src/logger-console.ts","../node_modules/path-to-regexp/dist.es2015/index.js","../src/list-listeners.ts","../src/regexp-bus.ts","../src/ipbus.ts","../src/simpleListener.ts","../src/utils/validate.ts"],"sourcesContent":[null,null,"/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \" + i);\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \" + j);\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \" + j);\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \" + i);\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \" + i);\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\" + escapeString(options.delimiter || \"/#?\") + \"]+?\";\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \" + nextType + \" at \" + index + \", expected \" + type);\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        // tslint:disable-next-line\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\" + token.pattern + \")$\", reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not repeat, but got an array\");\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not be empty\");\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to be \" + typeOfMessage);\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            // tslint:disable-next-line\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    // Use a negative lookahead to match only capturing groups.\n    var groups = path.source.match(/\\((?!\\?)/g);\n    if (groups) {\n        for (var i = 0; i < groups.length; i++) {\n            keys.push({\n                name: i,\n                prefix: \"\",\n                suffix: \"\",\n                modifier: \"\",\n                pattern: \"\"\n            });\n        }\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\" + parts.join(\"|\") + \")\", flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;\n    var endsWith = \"[\" + escapeString(options.endsWith || \"\") + \"]|$\";\n    var delimiter = \"[\" + escapeString(options.delimiter || \"/#?\") + \"]\";\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\" + prefix + \"((?:\" + token.pattern + \")(?:\" + suffix + prefix + \"(?:\" + token.pattern + \"))*)\" + suffix + \")\" + mod;\n                    }\n                    else {\n                        route += \"(?:\" + prefix + \"(\" + token.pattern + \")\" + suffix + \")\" + token.modifier;\n                    }\n                }\n                else {\n                    route += \"(\" + token.pattern + \")\" + token.modifier;\n                }\n            }\n            else {\n                route += \"(?:\" + prefix + suffix + \")\" + token.modifier;\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += delimiter + \"?\";\n        route += !options.endsWith ? \"$\" : \"(?=\" + endsWith + \")\";\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n            : // tslint:disable-next-line\n                endToken === undefined;\n        if (!strict) {\n            route += \"(?:\" + delimiter + \"(?=\" + endsWith + \"))?\";\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\" + delimiter + \"|\" + endsWith + \")\";\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map",null,null,null,null,null],"names":["LogLevel","LoggerConsole","_i","args","this","level","info","log","console","trace","debug","warn","error","func","stack","a","d","Date","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","mcC","push","String","prefix","i","length","traceLine","stack_1","Error","split","e","apply","parent","Array","isArray","map","p","join","parse","str","options","tokens","char","type","index","value","count","pattern","j","TypeError","name","code","charCodeAt","lexer","_a","prefixes","defaultPattern","escapeString","delimiter","result","key","path","tryConsume","mustConsume","undefined","nextType","consumeText","name_1","pattern_1","suffix","indexOf","modifier","match","keys","re","decode","x","pathname","exec","params","Object","create","_loop_1","regexpToFunction","pathToRegexp","replace","flags","sensitive","stringToRegexp","strict","_b","start","_c","end","_d","encode","endsWith","route","tokens_1","mod","token","endToken","isEndDelimited","RegExp","tokensToRegexp","groups","source","regexpToRegexp","parts","ListListeners","listener","listeners","some","l","list","concat","splice","callback","Boolean","RegExpBus","channel","r","regexps","exists","isExists","add","remove","size","event","target","buildCacheLine","self","any","process","logger","IpBus","dispatcher","dispatchers","regExpBus","subscribe","forEach","onSubscribe","unsubscribe","onUnsubscribe","data","sourceListener","publish","parentLogger","SimpleListener","handler","originId","getTime","bind","message"],"mappings":"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"}